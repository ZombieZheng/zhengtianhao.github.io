<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Zombies</title>
    <link>http://example.com/</link>
    
    <atom:link href="http://example.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>不忘初心,砥砺前行</description>
    <pubDate>Fri, 11 Jun 2021 13:24:57 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Java练习题</title>
      <link>http://example.com/2021/06/11/Java%E7%BB%83%E4%B9%A0%E9%A2%98/</link>
      <guid>http://example.com/2021/06/11/Java%E7%BB%83%E4%B9%A0%E9%A2%98/</guid>
      <pubDate>Fri, 11 Jun 2021 13:24:57 GMT</pubDate>
      
      
      
      
      
      
      <comments>http://example.com/2021/06/11/Java%E7%BB%83%E4%B9%A0%E9%A2%98/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>HTML</title>
      <link>http://example.com/2021/06/11/HTML/</link>
      <guid>http://example.com/2021/06/11/HTML/</guid>
      <pubDate>Fri, 11 Jun 2021 06:08:09 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;HTML&quot;&gt;&lt;a href=&quot;#HTML&quot; class=&quot;headerlink&quot; title=&quot;HTML&quot;&gt;&lt;/a&gt;HTML&lt;/h1&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><span id="more"></span><h1 id="网页开发标准W3C"><a href="#网页开发标准W3C" class="headerlink" title="网页开发标准W3C"></a>网页开发标准W3C</h1><h2 id="网页分为三部分"><a href="#网页分为三部分" class="headerlink" title="网页分为三部分"></a>网页分为三部分</h2><h3 id="结构-HTML"><a href="#结构-HTML" class="headerlink" title="结构:HTML"></a>结构:HTML</h3><h3 id="表现-CSS"><a href="#表现-CSS" class="headerlink" title="表现:CSS"></a>表现:CSS</h3><h3 id="行为-JavaScript用于响应用户操作"><a href="#行为-JavaScript用于响应用户操作" class="headerlink" title="行为:JavaScript用于响应用户操作"></a>行为:JavaScript用于响应用户操作</h3><hr><hr><h1 id="HTML-1"><a href="#HTML-1" class="headerlink" title="HTML"></a>HTML</h1><h2 id="超文本标记语言"><a href="#超文本标记语言" class="headerlink" title="超文本标记语言"></a><strong>超文本标记语言</strong></h2><h2 id="使用标签的形式来标识网页中的不同组成成分"><a href="#使用标签的形式来标识网页中的不同组成成分" class="headerlink" title="使用标签的形式来标识网页中的不同组成成分"></a>使用<strong>标签</strong>的形式来标识网页中的不同组成成分</h2><h2 id="所谓超文本指的就是超链接-使用超链接跳转页面"><a href="#所谓超文本指的就是超链接-使用超链接跳转页面" class="headerlink" title="所谓超文本指的就是超链接,使用超链接跳转页面"></a>所谓超文本指的就是<strong>超链接</strong>,使用超链接跳转页面</h2><hr><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="lt-h1-gt-一级标题-lt-h1-gt"><a href="#lt-h1-gt-一级标题-lt-h1-gt" class="headerlink" title="&lt;h1&gt;一级标题&lt;/h1&gt;"></a><code>&lt;h1&gt;一级标题&lt;/h1&gt;</code></h3><h3 id="lt-p-gt-段落-lt-p-gt"><a href="#lt-p-gt-段落-lt-p-gt" class="headerlink" title="&lt;p&gt;段落&lt;/p&gt;"></a><code>&lt;p&gt;段落&lt;/p&gt;</code></h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span>网页中源数据,不会出现在网页上</span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span>需要显示的东西写在这里<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="自结束标签-lt-img-gt-lt-input-gt"><a href="#自结束标签-lt-img-gt-lt-input-gt" class="headerlink" title="自结束标签&lt;img&gt;&lt;input&gt;"></a>自结束标签<code>&lt;img&gt;&lt;input&gt;</code></h3><h3 id="属性-红色字体-lt-h1-gt-lt-font-color-quot-red-quot-gt-zombies-lt-font-gt-zheng-lt-h1-gt"><a href="#属性-红色字体-lt-h1-gt-lt-font-color-quot-red-quot-gt-zombies-lt-font-gt-zheng-lt-h1-gt" class="headerlink" title="属性:红色字体 &lt;h1&gt;&lt;font color = &quot;red&quot;&gt;zombies&lt;/font&gt;zheng&lt;/h1&gt;"></a>属性:红色字体 <code>&lt;h1&gt;&lt;font color = &quot;red&quot;&gt;zombies&lt;/font&gt;zheng&lt;/h1&gt;</code></h3><hr><hr><h1 id="HTML语法"><a href="#HTML语法" class="headerlink" title="HTML语法"></a>HTML语法</h1><h2 id="在网页中多个空格会被解析成一个空格"><a href="#在网页中多个空格会被解析成一个空格" class="headerlink" title="在网页中多个空格会被解析成一个空格"></a>在网页中多个空格会被解析成一个空格</h2><h2 id="实体的语法"><a href="#实体的语法" class="headerlink" title="实体的语法"></a>实体的语法</h2><h3 id="amp-实体的名字"><a href="#amp-实体的名字" class="headerlink" title="&amp;实体的名字;"></a>&amp;实体的名字;</h3><h4 id="amp-nbsp-空格"><a href="#amp-nbsp-空格" class="headerlink" title="&amp;nbsp:空格"></a>&amp;nbsp:空格</h4><h4 id="amp-gt-大于号"><a href="#amp-gt-大于号" class="headerlink" title="&amp;gt:大于号"></a>&amp;gt:大于号</h4><h4 id="amp-lt-小于号"><a href="#amp-lt-小于号" class="headerlink" title="&amp;lt:小于号"></a>&amp;lt:小于号</h4><h4 id="amp-copy-版权符号"><a href="#amp-copy-版权符号" class="headerlink" title="&amp;copy:版权符号"></a>&amp;copy:版权符号</h4><h3 id="meta主要用于设置网页中的一些元数据-元数据不给用户看-charset-字符集-name-指定的数据名称-content-指定的数据的内容"><a href="#meta主要用于设置网页中的一些元数据-元数据不给用户看-charset-字符集-name-指定的数据名称-content-指定的数据的内容" class="headerlink" title="meta主要用于设置网页中的一些元数据,元数据不给用户看;charset:字符集;name:指定的数据名称;content:指定的数据的内容;"></a>meta主要用于设置网页中的一些元数据,元数据不给用户看;charset:字符集;name:指定的数据名称;content:指定的数据的内容;</h3><h3 id="keywords表示网站的关键字-可以写多个"><a href="#keywords表示网站的关键字-可以写多个" class="headerlink" title="keywords表示网站的关键字.可以写多个"></a>keywords表示网站的关键字.可以写多个</h3><h3 id="description-用于指定网站的描述"><a href="#description-用于指定网站的描述" class="headerlink" title="description 用于指定网站的描述"></a>description 用于指定网站的描述</h3><h3 id="title标签的内容会作为搜索结果的超链接上的文字显示"><a href="#title标签的内容会作为搜索结果的超链接上的文字显示" class="headerlink" title="title标签的内容会作为搜索结果的超链接上的文字显示"></a>title标签的内容会作为搜索结果的超链接上的文字显示</h3><h4 id="lt-meta-name-quot-keywords-quot-content-quot-zombie-quot-gt"><a href="#lt-meta-name-quot-keywords-quot-content-quot-zombie-quot-gt" class="headerlink" title="&lt;meta name=&quot;keywords&quot; content=&quot;zombie&quot;&gt;"></a><code>&lt;meta name=&quot;keywords&quot; content=&quot;zombie&quot;&gt;</code></h4><h4 id="将网页重定向到另一个网站-lt-meta-http-equiv-quot-refresh-quot-content-quot-www-zhengtianhao-cn-quot-gt"><a href="#将网页重定向到另一个网站-lt-meta-http-equiv-quot-refresh-quot-content-quot-www-zhengtianhao-cn-quot-gt" class="headerlink" title="将网页重定向到另一个网站 &lt;meta http-equiv=&quot;refresh&quot; content=&quot;www.zhengtianhao.cn&quot;&gt;"></a>将网页重定向到另一个网站 <code>&lt;meta http-equiv=&quot;refresh&quot; content=&quot;www.zhengtianhao.cn&quot;&gt;</code></h4><hr><hr><h2 id="标签标题"><a href="#标签标题" class="headerlink" title="标签标题"></a>标签标题</h2><h3 id="h1-h6-六级标题-h1最重要-仅次于title-只能用一个"><a href="#h1-h6-六级标题-h1最重要-仅次于title-只能用一个" class="headerlink" title="h1-h6 六级标题,h1最重要.仅次于title,只能用一个"></a>h1-h6 六级标题,h1最重要.仅次于title,只能用一个</h3><h3 id="独占一行元素被称为快元素-block-element"><a href="#独占一行元素被称为快元素-block-element" class="headerlink" title="独占一行元素被称为快元素(block element)"></a>独占一行元素被称为快元素(block element)</h3><h3 id="p元素表示页面中的段落-也是一个块元素-一般通过块元素对页面进行布局"><a href="#p元素表示页面中的段落-也是一个块元素-一般通过块元素对页面进行布局" class="headerlink" title="p元素表示页面中的段落,也是一个块元素(一般通过块元素对页面进行布局)"></a>p元素表示页面中的段落,也是一个块元素(一般通过块元素对页面进行布局)</h3><h3 id="hgroup标签用来为标题分组-可以将一组相关的标题同时放入到hgroup-也是块元素"><a href="#hgroup标签用来为标题分组-可以将一组相关的标题同时放入到hgroup-也是块元素" class="headerlink" title="hgroup标签用来为标题分组,可以将一组相关的标题同时放入到hgroup,也是块元素"></a>hgroup标签用来为标题分组,可以将一组相关的标题同时放入到hgroup,也是块元素</h3><h3 id="em标签用于表示语音语调的一个家中-不会独占一行的元素叫行内元素-inline-element"><a href="#em标签用于表示语音语调的一个家中-不会独占一行的元素叫行内元素-inline-element" class="headerlink" title="em标签用于表示语音语调的一个家中(不会独占一行的元素叫行内元素(inline element))"></a>em标签用于表示语音语调的一个家中(不会独占一行的元素叫行内元素(inline element))</h3><h3 id="strong标签表示强调-加粗-行内元素-行内元素主要用来包裹文字"><a href="#strong标签表示强调-加粗-行内元素-行内元素主要用来包裹文字" class="headerlink" title="strong标签表示强调,加粗,行内元素(行内元素主要用来包裹文字)"></a>strong标签表示强调,加粗,行内元素(行内元素主要用来包裹文字)</h3><h3 id="blockquote表示一个长引用-块元素-q表示一个短引用"><a href="#blockquote表示一个长引用-块元素-q表示一个短引用" class="headerlink" title="blockquote表示一个长引用,块元素;q表示一个短引用"></a>blockquote表示一个长引用,块元素;q表示一个短引用</h3><h3 id="一般情况下是块元素中放行内元素"><a href="#一般情况下是块元素中放行内元素" class="headerlink" title="一般情况下是块元素中放行内元素"></a>一般情况下是块元素中放行内元素</h3><h3 id="浏览器在解析网页时-会自动对网页下不符合规范的内容进行修正"><a href="#浏览器在解析网页时-会自动对网页下不符合规范的内容进行修正" class="headerlink" title="浏览器在解析网页时,会自动对网页下不符合规范的内容进行修正"></a>浏览器在解析网页时,会自动对网页下不符合规范的内容进行修正</h3><hr><hr><h1 id="布局标签"><a href="#布局标签" class="headerlink" title="布局标签"></a>布局标签</h1><h3 id="header标签表示网页的头部"><a href="#header标签表示网页的头部" class="headerlink" title="header标签表示网页的头部"></a>header标签表示网页的头部</h3><h3 id="main标签表示网页的主体部分-一个网页只能有一个"><a href="#main标签表示网页的主体部分-一个网页只能有一个" class="headerlink" title="main标签表示网页的主体部分(一个网页只能有一个)"></a>main标签表示网页的主体部分(一个网页只能有一个)</h3><h3 id="footer标签表示网页的底部"><a href="#footer标签表示网页的底部" class="headerlink" title="footer标签表示网页的底部"></a>footer标签表示网页的底部</h3><h3 id="nav标签表示网页中的导航"><a href="#nav标签表示网页中的导航" class="headerlink" title="nav标签表示网页中的导航"></a>nav标签表示网页中的导航</h3><h3 id="aside标签表示和主体相关的其他内容-侧边栏"><a href="#aside标签表示和主体相关的其他内容-侧边栏" class="headerlink" title="aside标签表示和主体相关的其他内容(侧边栏)"></a>aside标签表示和主体相关的其他内容(侧边栏)</h3><h3 id="article标签表示一个文章"><a href="#article标签表示一个文章" class="headerlink" title="article标签表示一个文章"></a>article标签表示一个文章</h3><h3 id="section表示一个独立的区块"><a href="#section表示一个独立的区块" class="headerlink" title="section表示一个独立的区块"></a>section表示一个独立的区块</h3><h3 id="div-没有意义-就用来表示一个区块"><a href="#div-没有意义-就用来表示一个区块" class="headerlink" title="div 没有意义,就用来表示一个区块."></a>div 没有意义,就用来表示一个区块.</h3><h3 id="span没有语义-行内元素"><a href="#span没有语义-行内元素" class="headerlink" title="span没有语义,行内元素,"></a>span没有语义,行内元素,</h3><hr><hr><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><h3 id="使用ul标签来创建有序列表-用li表示列表项"><a href="#使用ul标签来创建有序列表-用li表示列表项" class="headerlink" title="使用ul标签来创建有序列表,用li表示列表项"></a>使用ul标签来创建有序列表,用li表示列表项</h3><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><h3 id="使用ol标签来创建有序列表-用li表示列表项"><a href="#使用ol标签来创建有序列表-用li表示列表项" class="headerlink" title="使用ol标签来创建有序列表,用li表示列表项"></a>使用ol标签来创建有序列表,用li表示列表项</h3><h2 id="定义列表"><a href="#定义列表" class="headerlink" title="定义列表"></a>定义列表</h2><h3 id="使用dl标签来创建一个定义列表-用dt来表示定义的内容-使用dd来对内容进行解释说明"><a href="#使用dl标签来创建一个定义列表-用dt来表示定义的内容-使用dd来对内容进行解释说明" class="headerlink" title="使用dl标签来创建一个定义列表,用dt来表示定义的内容,使用dd来对内容进行解释说明"></a>使用dl标签来创建一个定义列表,用dt来表示定义的内容,使用dd来对内容进行解释说明</h3><h2 id="列表之间可以互相嵌套"><a href="#列表之间可以互相嵌套" class="headerlink" title="列表之间可以互相嵌套"></a>列表之间可以互相嵌套</h2><hr><hr><h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><h2 id="跳转页面-跳到当前页的某个位置"><a href="#跳转页面-跳到当前页的某个位置" class="headerlink" title="跳转页面,跳到当前页的某个位置"></a>跳转页面,跳到当前页的某个位置</h2><h3 id="使用-a-标签来定义超链接-行内元素-在a里除了它可以放任何元素"><a href="#使用-a-标签来定义超链接-行内元素-在a里除了它可以放任何元素" class="headerlink" title="使用 a 标签来定义超链接,行内元素,在a里除了它可以放任何元素"></a>使用 a 标签来定义超链接,行内元素,在a里除了它可以放任何元素</h3><h3 id="lt-a-href-quot-www-zhengtianhao-cn-quot-gt-博客-也可以跳自己编辑的页面-lt-a-gt"><a href="#lt-a-href-quot-www-zhengtianhao-cn-quot-gt-博客-也可以跳自己编辑的页面-lt-a-gt" class="headerlink" title="&lt;a href = &quot;www.zhengtianhao.cn&quot;&gt;博客//也可以跳自己编辑的页面&lt;/a&gt;"></a><code>&lt;a href = &quot;www.zhengtianhao.cn&quot;&gt;博客//也可以跳自己编辑的页面&lt;/a&gt;</code></h3><h3 id="当我们需要跳转到一个服务器内部的页面时-需要写相对路径-当前目录-可不写-上一级目录"><a href="#当我们需要跳转到一个服务器内部的页面时-需要写相对路径-当前目录-可不写-上一级目录" class="headerlink" title="当我们需要跳转到一个服务器内部的页面时,需要写相对路径(./当前目录(可不写);../上一级目录)"></a>当我们需要跳转到一个服务器内部的页面时,需要写相对路径(./当前目录(可不写);../上一级目录)</h3><h3 id="有target属性-用来指定超链打开的位置-可选值"><a href="#有target属性-用来指定超链打开的位置-可选值" class="headerlink" title="有target属性:用来指定超链打开的位置,可选值:"></a>有target属性:用来指定超链打开的位置,可选值:</h3><h3 id="self-默认值-在当前页面中打开超链接"><a href="#self-默认值-在当前页面中打开超链接" class="headerlink" title="_self 默认值 在当前页面中打开超链接;"></a>_self 默认值 在当前页面中打开超链接;</h3><h3 id="blank-在一个新的页面中代开链接"><a href="#blank-在一个新的页面中代开链接" class="headerlink" title="_blank:在一个新的页面中代开链接;"></a>_blank:在一个新的页面中代开链接;</h3><h3 id="可以直接将超链接的href属性设置为-这样点击超链接以后页面不会发生跳转-反而会到页面的顶部"><a href="#可以直接将超链接的href属性设置为-这样点击超链接以后页面不会发生跳转-反而会到页面的顶部" class="headerlink" title="可以直接将超链接的href属性设置为#,这样点击超链接以后页面不会发生跳转,反而会到页面的顶部,"></a>可以直接将超链接的href属性设置为#,这样点击超链接以后页面不会发生跳转,反而会到页面的顶部,</h3><h3 id="每一个属性都可以添加一个id属性-可以跳到页面的指定位置-只要将href属性设置为-目标元素的id值"><a href="#每一个属性都可以添加一个id属性-可以跳到页面的指定位置-只要将href属性设置为-目标元素的id值" class="headerlink" title="每一个属性都可以添加一个id属性,可以跳到页面的指定位置,只要将href属性设置为 #目标元素的id值"></a>每一个属性都可以添加一个id属性,可以跳到页面的指定位置,只要将href属性设置为 #目标元素的id值</h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">a</span> href = <span class="string">&quot;#zombie&quot;</span>&gt;去底部&lt;/<span class="keyword">a</span>&gt;</span><br><span class="line">.</span><br><span class="line"><span class="comment">.//javascript:;  什么都不会发生</span></span><br><span class="line">.</span><br><span class="line">&lt;<span class="keyword">a</span> id = <span class="string">&quot;botton&quot;</span> href = <span class="string">&quot;#&quot;</span>&gt;回到顶部&lt;/<span class="keyword">a</span>&gt;</span><br></pre></td></tr></table></figure><hr><hr><h1 id="图片标签"><a href="#图片标签" class="headerlink" title="图片标签"></a>图片标签</h1><h2 id="使用img标签来引入外部标签-img标签是一个自结果标签-属于替换元素"><a href="#使用img标签来引入外部标签-img标签是一个自结果标签-属于替换元素" class="headerlink" title="使用img标签来引入外部标签,img标签是一个自结果标签,属于替换元素"></a>使用img标签来引入外部标签,img标签是一个自结果标签,属于替换元素</h2><h3 id="src指定外部标签的路径-alt图片的描述-用于浏览器搜索引擎识别图片-类似id-id是唯一的-它是一类"><a href="#src指定外部标签的路径-alt图片的描述-用于浏览器搜索引擎识别图片-类似id-id是唯一的-它是一类" class="headerlink" title="src指定外部标签的路径;alt图片的描述,用于浏览器搜索引擎识别图片,类似id,id是唯一的,它是一类"></a>src指定外部标签的路径;alt图片的描述,用于浏览器搜索引擎识别图片,类似id,id是唯一的,它是一类</h3><h3 id="还有属性宽和高"><a href="#还有属性宽和高" class="headerlink" title="还有属性宽和高"></a>还有属性宽和高</h3><h3 id="lt-img-src-quot-图片地址-quot-alt-“图片描述”-gt"><a href="#lt-img-src-quot-图片地址-quot-alt-“图片描述”-gt" class="headerlink" title="&lt;img src = &quot;图片地址&quot; alt = “图片描述”&gt;"></a><code>&lt;img src = &quot;图片地址&quot;</code> alt = “图片描述”&gt;</h3><h2 id="图片的格式"><a href="#图片的格式" class="headerlink" title="图片的格式"></a>图片的格式</h2><h3 id="jpg-支持的颜色比较丰富-不支持动图和透明效果-一般用来显示照片"><a href="#jpg-支持的颜色比较丰富-不支持动图和透明效果-一般用来显示照片" class="headerlink" title="jpg:支持的颜色比较丰富,不支持动图和透明效果,一般用来显示照片"></a>jpg:支持的颜色比较丰富,不支持动图和透明效果,一般用来显示照片</h3><h3 id="gif-支持的颜色比较少-支持简单透明-支持动图-一般用于颜色单一的图片-动图"><a href="#gif-支持的颜色比较少-支持简单透明-支持动图-一般用于颜色单一的图片-动图" class="headerlink" title="gif:支持的颜色比较少,支持简单透明,支持动图,一般用于颜色单一的图片,动图"></a>gif:支持的颜色比较少,支持简单透明,支持动图,一般用于颜色单一的图片,动图</h3><h3 id="png-支持的颜色丰富-支持复杂透明-不支持动图-一般用于复杂透明和颜色丰富的图片"><a href="#png-支持的颜色丰富-支持复杂透明-不支持动图-一般用于复杂透明和颜色丰富的图片" class="headerlink" title="png:支持的颜色丰富,支持复杂透明,不支持动图,一般用于复杂透明和颜色丰富的图片"></a>png:支持的颜色丰富,支持复杂透明,不支持动图,一般用于复杂透明和颜色丰富的图片</h3><h3 id="webp-这种格式是谷歌新推出的专门用来表示网页图片的一种格式-小还具备以上有点"><a href="#webp-这种格式是谷歌新推出的专门用来表示网页图片的一种格式-小还具备以上有点" class="headerlink" title="webp:这种格式是谷歌新推出的专门用来表示网页图片的一种格式,小还具备以上有点"></a>webp:这种格式是谷歌新推出的专门用来表示网页图片的一种格式,小还具备以上有点</h3><h2 id="base64"><a href="#base64" class="headerlink" title="base64"></a>base64</h2><h3 id="将图片使用base64编码-这样可以将图片转换为字符-通过字符的形式将图片引入-用于图片与网页一起展现"><a href="#将图片使用base64编码-这样可以将图片转换为字符-通过字符的形式将图片引入-用于图片与网页一起展现" class="headerlink" title="将图片使用base64编码,这样可以将图片转换为字符,通过字符的形式将图片引入,用于图片与网页一起展现"></a>将图片使用base64编码,这样可以将图片转换为字符,通过字符的形式将图片引入,用于图片与网页一起展现</h3><hr><hr><h1 id="内联框架"><a href="#内联框架" class="headerlink" title="内联框架"></a>内联框架</h1><h2 id="用于向当前页面中引入一个页面-src-指定要引入的页面的路径-frameborder指定内联框架的边框"><a href="#用于向当前页面中引入一个页面-src-指定要引入的页面的路径-frameborder指定内联框架的边框" class="headerlink" title="用于向当前页面中引入一个页面 ; src 指定要引入的页面的路径;frameborder指定内联框架的边框"></a>用于向当前页面中引入一个页面 ; src 指定要引入的页面的路径;frameborder指定内联框架的边框</h2><h3 id="lt-iframe-src-quot-wwww-zhengtianhao-cn-quot-width-quot-500-quot-height-quot-500-quot-frameborder-quot-1-quot-gt-lt-iframe-gt"><a href="#lt-iframe-src-quot-wwww-zhengtianhao-cn-quot-width-quot-500-quot-height-quot-500-quot-frameborder-quot-1-quot-gt-lt-iframe-gt" class="headerlink" title="&lt;iframe src = &quot;wwww.zhengtianhao.cn&quot; width = &quot;500&quot; height = &quot;500&quot; frameborder=&quot;1&quot;&gt;&lt;/iframe&gt;"></a><code>&lt;iframe src = &quot;wwww.zhengtianhao.cn&quot; width = &quot;500&quot; height = &quot;500&quot; frameborder=&quot;1&quot;&gt;&lt;/iframe&gt;</code></h3><hr><hr><h1 id="音视频播放"><a href="#音视频播放" class="headerlink" title="音视频播放"></a>音视频播放</h1><h2 id="audio-标签用来向页面中引入一个外部的音频文件"><a href="#audio-标签用来向页面中引入一个外部的音频文件" class="headerlink" title="audio 标签用来向页面中引入一个外部的音频文件"></a>audio 标签用来向页面中引入一个外部的音频文件</h2><h2 id="音视频文件引入时-默认情况下不允许用户自己控制播放停止"><a href="#音视频文件引入时-默认情况下不允许用户自己控制播放停止" class="headerlink" title="音视频文件引入时,默认情况下不允许用户自己控制播放停止"></a>音视频文件引入时,默认情况下不允许用户自己控制播放停止</h2><h2 id="属性"><a href="#属性" class="headerlink" title="属性:"></a>属性:</h2><h2 id="controls是否允许用户控制播放"><a href="#controls是否允许用户控制播放" class="headerlink" title="controls是否允许用户控制播放;"></a>controls是否允许用户控制播放;</h2><h2 id="autoplay音频文件是否自动播放"><a href="#autoplay音频文件是否自动播放" class="headerlink" title="autoplay音频文件是否自动播放;"></a>autoplay音频文件是否自动播放;</h2><h2 id="loop循环播放"><a href="#loop循环播放" class="headerlink" title="loop循环播放;"></a>loop循环播放;</h2><h2 id="lt-audio-src-quot-相对路径-quot-controls-autoplay-gt-lt-audio-gt-有些不可以自动播放是浏览器的锅-大部分都对音乐取消自动播放"><a href="#lt-audio-src-quot-相对路径-quot-controls-autoplay-gt-lt-audio-gt-有些不可以自动播放是浏览器的锅-大部分都对音乐取消自动播放" class="headerlink" title="&lt;audio src = &quot;相对路径&quot; controls autoplay&gt;&lt;/audio&gt;//有些不可以自动播放是浏览器的锅(大部分都对音乐取消自动播放)"></a><code>&lt;audio src = &quot;相对路径&quot; controls autoplay&gt;&lt;/audio&gt;</code>//有些不可以自动播放是浏览器的锅(大部分都对音乐取消自动播放)</h2><h3 id="浏览器不支持mp3可以写ogg"><a href="#浏览器不支持mp3可以写ogg" class="headerlink" title="浏览器不支持mp3可以写ogg"></a>浏览器不支持mp3可以写ogg</h3><h2 id="video标签来向页面中引入一个视频"><a href="#video标签来向页面中引入一个视频" class="headerlink" title="video标签来向页面中引入一个视频"></a>video标签来向页面中引入一个视频</h2><h3 id="浏览器不支持mp4可以写webm"><a href="#浏览器不支持mp4可以写webm" class="headerlink" title="浏览器不支持mp4可以写webm"></a>浏览器不支持mp4可以写webm</h3><hr><hr><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><hr><hr><h1 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h1><hr><hr>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E6%A0%B7%E5%BC%8F/">样式</category>
      
      
      <category domain="http://example.com/tags/%E5%AF%BC%E8%88%AA/">导航</category>
      
      <category domain="http://example.com/tags/%E5%88%86%E4%BA%AB/">分享</category>
      
      
      <comments>http://example.com/2021/06/11/HTML/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JavaScript</title>
      <link>http://example.com/2021/06/11/JavaScript/</link>
      <guid>http://example.com/2021/06/11/JavaScript/</guid>
      <pubDate>Fri, 11 Jun 2021 02:34:36 GMT</pubDate>
      
      <description>&lt;hr&gt;
&lt;h1 id=&quot;JavaScript&quot;&gt;&lt;a href=&quot;#JavaScript&quot; class=&quot;headerlink&quot; title=&quot;JavaScript&quot;&gt;&lt;/a&gt;JavaScript&lt;/h1&gt;</description>
      
      
      
      <content:encoded><![CDATA[<hr><h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><span id="more"></span><h2 id="1-1JavaScript介绍"><a href="#1-1JavaScript介绍" class="headerlink" title="1.1JavaScript介绍"></a>1.1JavaScript介绍</h2><h3 id="运行在客户端的脚本语言"><a href="#运行在客户端的脚本语言" class="headerlink" title="运行在客户端的脚本语言"></a>运行在客户端的脚本语言</h3><h3 id="脚本语言不需要编译-解释型语言-Java是编译型语言"><a href="#脚本语言不需要编译-解释型语言-Java是编译型语言" class="headerlink" title="脚本语言不需要编译(解释型语言,Java是编译型语言)"></a>脚本语言不需要编译(解释型语言,Java是编译型语言)</h3><h3 id="也可以基于Node-js进行服务端编程"><a href="#也可以基于Node-js进行服务端编程" class="headerlink" title="也可以基于Node.js进行服务端编程"></a>也可以基于Node.js进行服务端编程</h3><h2 id="1-2浏览器执行JS简介"><a href="#1-2浏览器执行JS简介" class="headerlink" title="1.2浏览器执行JS简介"></a>1.2浏览器执行JS简介</h2><h3 id="渲染引擎-用来解析HTML与CSS-俗称内核-例如chrome浏览器的blink"><a href="#渲染引擎-用来解析HTML与CSS-俗称内核-例如chrome浏览器的blink" class="headerlink" title="渲染引擎:用来解析HTML与CSS,俗称内核,例如chrome浏览器的blink"></a>渲染引擎:用来解析HTML与CSS,俗称内核,例如chrome浏览器的blink</h3><h3 id="JS引擎-也称为JS解释器-用来读取网页中的JavaScript代码-对其处理后运行-例如V8"><a href="#JS引擎-也称为JS解释器-用来读取网页中的JavaScript代码-对其处理后运行-例如V8" class="headerlink" title="JS引擎:也称为JS解释器,用来读取网页中的JavaScript代码,对其处理后运行,例如V8"></a>JS引擎:也称为JS解释器,用来读取网页中的JavaScript代码,对其处理后运行,例如V8</h3><h3 id="一句一句解释转换机器语言"><a href="#一句一句解释转换机器语言" class="headerlink" title="一句一句解释转换机器语言"></a>一句一句解释转换机器语言</h3><h2 id="1-3JS的组成"><a href="#1-3JS的组成" class="headerlink" title="1.3JS的组成"></a>1.3JS的组成</h2><h3 id="ECMAScript-语法规则"><a href="#ECMAScript-语法规则" class="headerlink" title="ECMAScript:语法规则"></a>ECMAScript:语法规则</h3><h3 id="DOM-页面文档对象模型"><a href="#DOM-页面文档对象模型" class="headerlink" title="DOM:页面文档对象模型"></a>DOM:页面文档对象模型</h3><h3 id="BOM-浏览器对象模型"><a href="#BOM-浏览器对象模型" class="headerlink" title="BOM:浏览器对象模型"></a>BOM:浏览器对象模型</h3><h2 id="1-4书写"><a href="#1-4书写" class="headerlink" title="1.4书写"></a>1.4书写</h2><h3 id="行内式-元素内部"><a href="#行内式-元素内部" class="headerlink" title="行内式:元素内部"></a>行内式:元素内部</h3><h3 id="内嵌式"><a href="#内嵌式" class="headerlink" title="内嵌式:"></a>内嵌式:</h3><h4 id="lt-script-gt-lt-script-gt"><a href="#lt-script-gt-lt-script-gt" class="headerlink" title="&lt;script&gt;.......&lt;/script&gt;"></a><code>&lt;script&gt;.......&lt;/script&gt;</code></h4><h3 id="外部式-新建JS文件-直接写JS代码"><a href="#外部式-新建JS文件-直接写JS代码" class="headerlink" title="外部式:新建JS文件,直接写JS代码."></a>外部式:新建JS文件,直接写JS代码.</h3><h4 id="lt-script-src-quot-xinjian-js-quot-gt-lt-script-gt"><a href="#lt-script-src-quot-xinjian-js-quot-gt-lt-script-gt" class="headerlink" title="&lt;script src=&quot;xinjian.js&quot;&gt;&lt;/script&gt;"></a><code>&lt;script src=&quot;xinjian.js&quot;&gt;&lt;/script&gt;</code></h4><h2 id="1-5注释"><a href="#1-5注释" class="headerlink" title="1,5注释"></a>1,5注释</h2><h3 id="单行-多行"><a href="#单行-多行" class="headerlink" title="//单行    /*  */多行"></a>//单行    /*  */多行</h3><h2 id="1-6输入输出"><a href="#1-6输入输出" class="headerlink" title="1.6输入输出"></a>1.6输入输出</h2><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><h4 id="lt-script-gt-prompt-39-第一种输入框-39-lt-script-gt"><a href="#lt-script-gt-prompt-39-第一种输入框-39-lt-script-gt" class="headerlink" title="&lt;script&gt; prompt(&#39;第一种输入框&#39;)&lt;/script&gt;"></a><code>&lt;script&gt; prompt(&#39;第一种输入框&#39;)&lt;/script&gt;</code></h4><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><h4 id="lt-script-gt-alert-39-第一种警示框输出-39-lt-script-gt"><a href="#lt-script-gt-alert-39-第一种警示框输出-39-lt-script-gt" class="headerlink" title="&lt;script&gt;alert(&#39;第一种警示框输出&#39;)&lt;/script&gt;"></a><code>&lt;script&gt;alert(&#39;第一种警示框输出&#39;)&lt;/script&gt;</code></h4><h4 id="lt-script-gt-console-log-39-第二种控制台打印输出-39-lt-script-gt"><a href="#lt-script-gt-console-log-39-第二种控制台打印输出-39-lt-script-gt" class="headerlink" title="&lt;script&gt; console.log(&#39;第二种控制台打印输出&#39;)&lt;/script&gt;"></a><code>&lt;script&gt; console.log(&#39;第二种控制台打印输出&#39;)&lt;/script&gt;</code></h4><hr><hr><h1 id="JavaScript变量"><a href="#JavaScript变量" class="headerlink" title="JavaScript变量"></a>JavaScript变量</h1><h2 id="1-变量概述"><a href="#1-变量概述" class="headerlink" title="1.变量概述"></a>1.变量概述</h2><h3 id="1-1什么是变量"><a href="#1-1什么是变量" class="headerlink" title="1.1什么是变量"></a>1.1什么是变量</h3><h4 id="用于存放数据的容器-变量是内存中的空间"><a href="#用于存放数据的容器-变量是内存中的空间" class="headerlink" title="用于存放数据的容器.变量是内存中的空间"></a>用于存放数据的容器.变量是内存中的空间</h4><h3 id="1-2变量的使用"><a href="#1-2变量的使用" class="headerlink" title="1.2变量的使用"></a>1.2变量的使用</h3><h4 id="声明变量并赋值-变量初始化"><a href="#声明变量并赋值-变量初始化" class="headerlink" title="声明变量并赋值(变量初始化)"></a>声明变量并赋值(变量初始化)</h4><h5 id="lt-script-gt-var-age-21-lt-script-gt"><a href="#lt-script-gt-var-age-21-lt-script-gt" class="headerlink" title="&lt;script&gt;var age = 21;&lt;/script&gt;"></a><code>&lt;script&gt;var age = 21;&lt;/script&gt;</code></h5><h5 id="lt-script-gt-var-age-prompt-39-请输入你的年龄-39-lt-script-gt"><a href="#lt-script-gt-var-age-prompt-39-请输入你的年龄-39-lt-script-gt" class="headerlink" title="&lt;script&gt;var age = prompt(&#39;请输入你的年龄&#39;)&lt;/script&gt;"></a><code>&lt;script&gt;var age = prompt(&#39;请输入你的年龄&#39;)&lt;/script&gt;</code></h5><h5 id="声明不赋值-undefined"><a href="#声明不赋值-undefined" class="headerlink" title="声明不赋值  undefined"></a>声明不赋值  undefined</h5><h5 id="不声明-直接使用-会变成全局变量-不推荐"><a href="#不声明-直接使用-会变成全局变量-不推荐" class="headerlink" title="不声明,直接使用,会变成全局变量,不推荐"></a>不声明,直接使用,会变成全局变量,不推荐</h5><hr><hr><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><h2 id="1-数据类型简介"><a href="#1-数据类型简介" class="headerlink" title="1.数据类型简介"></a>1.数据类型简介</h2><h3 id="1-1为什么需要数据类型"><a href="#1-1为什么需要数据类型" class="headerlink" title="1.1为什么需要数据类型"></a>1.1为什么需要数据类型</h3><h4 id="更好的利用内存"><a href="#更好的利用内存" class="headerlink" title="更好的利用内存"></a>更好的利用内存</h4><h3 id="1-2变量的数据类型"><a href="#1-2变量的数据类型" class="headerlink" title="1.2变量的数据类型"></a>1.2变量的数据类型</h3><h4 id="JavaScript是一种弱类型或动态语言-它可以根据JS引擎自动判断-号右边变量值的数据类型来判断-JavaScript拥有动态类型-同时也意味着相同的变量可用作不同的类型"><a href="#JavaScript是一种弱类型或动态语言-它可以根据JS引擎自动判断-号右边变量值的数据类型来判断-JavaScript拥有动态类型-同时也意味着相同的变量可用作不同的类型" class="headerlink" title="JavaScript是一种弱类型或动态语言;它可以根据JS引擎自动判断=号右边变量值的数据类型来判断;JavaScript拥有动态类型,同时也意味着相同的变量可用作不同的类型."></a>JavaScript是一种弱类型或动态语言;它可以根据JS引擎自动判断=号右边变量值的数据类型来判断;JavaScript拥有动态类型,同时也意味着相同的变量可用作不同的类型.</h4><h4 id="lt-script-gt-var-x-22-x-39-zombie-39-lt-script-gt"><a href="#lt-script-gt-var-x-22-x-39-zombie-39-lt-script-gt" class="headerlink" title=" &lt;script&gt;var x = 22;x = &#39;zombie&#39;&lt;/script&gt;"></a><code> &lt;script&gt;var x = 22;x = &#39;zombie&#39;&lt;/script&gt;</code></h4><h2 id="2-数值类型"><a href="#2-数值类型" class="headerlink" title="2.数值类型"></a>2.数值类型</h2><h3 id="数值型最大值"><a href="#数值型最大值" class="headerlink" title="数值型最大值"></a>数值型最大值</h3><h4 id="lt-script-gt-console-log-Number-MAX-VALUE-lt-script-gt"><a href="#lt-script-gt-console-log-Number-MAX-VALUE-lt-script-gt" class="headerlink" title="&lt;script&gt;console.log(Number.MAX_VALUE);&lt;/script&gt;"></a><code>&lt;script&gt;console.log(Number.MAX_VALUE);&lt;/script&gt;</code></h4><h3 id="数值型最小值"><a href="#数值型最小值" class="headerlink" title="数值型最小值"></a>数值型最小值</h3><h4 id="lt-script-gt-console-log-Number-MIN-VALUE-lt-script-gt"><a href="#lt-script-gt-console-log-Number-MIN-VALUE-lt-script-gt" class="headerlink" title="&lt;script&gt;console.log(Number.MIN_VALUE);&lt;/script&gt;"></a><code>&lt;script&gt;console.log(Number.MIN_VALUE);&lt;/script&gt;</code></h4><h3 id="数值型无穷大"><a href="#数值型无穷大" class="headerlink" title="数值型无穷大"></a>数值型无穷大</h3><h4 id="lt-script-gt-console-log-Number-MAX-VALUE-2-lt-script-gt-Infinity无穷大"><a href="#lt-script-gt-console-log-Number-MAX-VALUE-2-lt-script-gt-Infinity无穷大" class="headerlink" title="&lt;script&gt;console.log(Number.MAX_VALUE*2);&lt;/script&gt; //Infinity无穷大"></a><code>&lt;script&gt;console.log(Number.MAX_VALUE*2);&lt;/script&gt;</code> //Infinity无穷大</h4><h3 id="数值型无穷小"><a href="#数值型无穷小" class="headerlink" title="数值型无穷小"></a>数值型无穷小</h3><h4 id="lt-script-gt-console-log-Number-MAX-VALUE-2-lt-script-gt-Infinity无穷小"><a href="#lt-script-gt-console-log-Number-MAX-VALUE-2-lt-script-gt-Infinity无穷小" class="headerlink" title="&lt;script&gt;console.log(-Number.MAX_VALUE*2);&lt;/script&gt; //-Infinity无穷小"></a><code>&lt;script&gt;console.log(-Number.MAX_VALUE*2);&lt;/script&gt;</code> //-Infinity无穷小</h4><h4 id="NaN表示非数字"><a href="#NaN表示非数字" class="headerlink" title="NaN表示非数字"></a>NaN表示非数字</h4><h4 id="验证-lt-script-gt-console-log-isNaN-22-lt-script-gt-false"><a href="#验证-lt-script-gt-console-log-isNaN-22-lt-script-gt-false" class="headerlink" title="验证:&lt;script&gt;console.log(isNaN(22));&lt;/script&gt; // false"></a>验证:<code>&lt;script&gt;console.log(isNaN(22));&lt;/script&gt;</code> // false</h4><h2 id="3-字符串类型"><a href="#3-字符串类型" class="headerlink" title="3.字符串类型"></a>3.字符串类型</h2><h3 id="3-1嵌套"><a href="#3-1嵌套" class="headerlink" title="3.1嵌套"></a>3.1嵌套</h3><h4 id="外双内单或外单内双"><a href="#外双内单或外单内双" class="headerlink" title="外双内单或外单内双"></a>外双内单或外单内双</h4><h3 id="3-2字符串转义字符-得用反斜杠"><a href="#3-2字符串转义字符-得用反斜杠" class="headerlink" title="3.2字符串转义字符,得用反斜杠\"></a>3.2字符串转义字符,得用反斜杠\</h3><h3 id="3-3检测获取字符串的长度"><a href="#3-3检测获取字符串的长度" class="headerlink" title="3.3检测获取字符串的长度"></a>3.3检测获取字符串的长度</h3><h4 id="lt-script-gt-console-log-str-length-lt-script-gt"><a href="#lt-script-gt-console-log-str-length-lt-script-gt" class="headerlink" title="&lt;script&gt;console.log(str.length);&lt;/script&gt;"></a><code>&lt;script&gt;console.log(str.length);&lt;/script&gt;</code></h4><h3 id="3-4字符串拼接-字符相连-数值相加"><a href="#3-4字符串拼接-字符相连-数值相加" class="headerlink" title="3.4字符串拼接(字符相连,数值相加)"></a>3.4字符串拼接(字符相连,数值相加)</h3><h4 id="lt-script-gt-console-log-39-zombie-39-39-zheng-39-39-21-39-lt-script-gt"><a href="#lt-script-gt-console-log-39-zombie-39-39-zheng-39-39-21-39-lt-script-gt" class="headerlink" title="&lt;script&gt;console.log(&#39;zombie&#39; + &#39;zheng&#39; + &#39;21&#39;)&lt;/script&gt;"></a><code>&lt;script&gt;console.log(&#39;zombie&#39; + &#39;zheng&#39; + &#39;21&#39;)&lt;/script&gt;</code></h4><h3 id="3-5-null空值-undefined未定义的-跟数字相加就是数字NaN-Boolean-false-true-相加当0-1"><a href="#3-5-null空值-undefined未定义的-跟数字相加就是数字NaN-Boolean-false-true-相加当0-1" class="headerlink" title="3.5 null空值;undefined未定义的:跟数字相加就是数字NaN;Boolean:false,true,相加当0,1"></a>3.5 null空值;undefined未定义的:跟数字相加就是数字NaN;Boolean:false,true,相加当0,1</h3><h2 id="4-获取变量数据类型"><a href="#4-获取变量数据类型" class="headerlink" title="4.获取变量数据类型"></a>4.获取变量数据类型</h2><h3 id="4-1获取检测变量的数据类型"><a href="#4-1获取检测变量的数据类型" class="headerlink" title="4.1获取检测变量的数据类型"></a>4.1获取检测变量的数据类型</h3><h4 id="lt-script-gt-var-num-21-console-log-typeof-num-lt-script-gt"><a href="#lt-script-gt-var-num-21-console-log-typeof-num-lt-script-gt" class="headerlink" title="&lt;script&gt;var num = 21;console.log(typeof num);&lt;/script&gt;"></a><code>&lt;script&gt;var num = 21;console.log(typeof num);&lt;/script&gt;</code></h4><h4 id="prompt-取过来的值是字符型的"><a href="#prompt-取过来的值是字符型的" class="headerlink" title="prompt 取过来的值是字符型的"></a>prompt 取过来的值是字符型的</h4><h3 id="4-2字面量"><a href="#4-2字面量" class="headerlink" title="4.2字面量"></a>4.2字面量</h3><h2 id="5-数据类型转换"><a href="#5-数据类型转换" class="headerlink" title="5.数据类型转换"></a>5.数据类型转换</h2><h3 id="转换为字符串"><a href="#转换为字符串" class="headerlink" title="转换为字符串"></a>转换为字符串</h3><h4 id="lt-script-gt-var-num-21-var-str-num-toString-lt-script-gt"><a href="#lt-script-gt-var-num-21-var-str-num-toString-lt-script-gt" class="headerlink" title="&lt;script&gt;var num = 21;var str = num.toString();&lt;/script&gt;"></a><code>&lt;script&gt;var num = 21;var str = num.toString();&lt;/script&gt;</code></h4><h4 id="lt-script-gt-var-num-21-cnosole-log-String-num-lt-script-gt"><a href="#lt-script-gt-var-num-21-cnosole-log-String-num-lt-script-gt" class="headerlink" title="&lt;script&gt;var num = 21;cnosole.log(String(num));&lt;/script&gt;"></a><code>&lt;script&gt;var num = 21;cnosole.log(String(num));&lt;/script&gt;</code></h4><h4 id="lt-script-gt-cnosole-log-num-39-39-隐式转换-lt-script-gt"><a href="#lt-script-gt-cnosole-log-num-39-39-隐式转换-lt-script-gt" class="headerlink" title="&lt;script&gt;cnosole.log(num + &#39;&#39;);//隐式转换&lt;/script&gt;"></a><code>&lt;script&gt;cnosole.log(num + &#39;&#39;);//隐式转换&lt;/script&gt;</code></h4><h3 id="转换为数字型"><a href="#转换为数字型" class="headerlink" title="转换为数字型"></a>转换为数字型</h3><h4 id="lt-script-gt-var-age-39-21-39-console-log-parseInt-age-lt-script-gt-小数会被取整-parseFloat就是小数了-数字开头会只保留数字-后面不是数字的字符删除"><a href="#lt-script-gt-var-age-39-21-39-console-log-parseInt-age-lt-script-gt-小数会被取整-parseFloat就是小数了-数字开头会只保留数字-后面不是数字的字符删除" class="headerlink" title="&lt;script&gt;var age = &#39;21&#39;;console.log(parseInt(age))&lt;/script&gt;//小数会被取整,parseFloat就是小数了.数字开头会只保留数字,后面不是数字的字符删除."></a><code>&lt;script&gt;var age = &#39;21&#39;;console.log(parseInt(age))&lt;/script&gt;</code>//小数会被取整,parseFloat就是小数了.数字开头会只保留数字,后面不是数字的字符删除.</h4><h4 id="lt-script-gt-var-str-39-21-39-console-log-Number-str-lt-script-gt"><a href="#lt-script-gt-var-str-39-21-39-console-log-Number-str-lt-script-gt" class="headerlink" title="&lt;script&gt;var str = &#39;21&#39;;console.log(Number(str));&lt;/script&gt;"></a><code>&lt;script&gt;var str = &#39;21&#39;;console.log(Number(str));&lt;/script&gt;</code></h4><h4 id="lt-script-gt-console-log-39-21-39-0-lt-script-gt-隐式转换-都可"><a href="#lt-script-gt-console-log-39-21-39-0-lt-script-gt-隐式转换-都可" class="headerlink" title="&lt;script&gt;console.log(&#39;21&#39; - 0);&lt;/script&gt;//隐式转换 - * /都可"></a><code>&lt;script&gt;console.log(&#39;21&#39; - 0);&lt;/script&gt;</code>//隐式转换 - * /都可</h4><h3 id="转换为布尔型"><a href="#转换为布尔型" class="headerlink" title="转换为布尔型"></a>转换为布尔型</h3><h3 id="‘’-0-NaN-null-undefined-都是false"><a href="#‘’-0-NaN-null-undefined-都是false" class="headerlink" title="‘’  0  NaN  null undefined 都是false"></a>‘’  0  NaN  null undefined 都是false</h3><h4 id="lt-script-gt-console-log-Boolean-0-lt-script-gt"><a href="#lt-script-gt-console-log-Boolean-0-lt-script-gt" class="headerlink" title="&lt;script&gt;console.log(Boolean(0));&lt;/script&gt;"></a><code>&lt;script&gt;console.log(Boolean(0));&lt;/script&gt;</code></h4><h2 id="标识符不能是关键字和保留字"><a href="#标识符不能是关键字和保留字" class="headerlink" title="标识符不能是关键字和保留字"></a>标识符不能是关键字和保留字</h2><hr><hr><h2 id="Javascript运算符"><a href="#Javascript运算符" class="headerlink" title="Javascript运算符"></a>Javascript运算符</h2><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><h4 id="被称为操作符"><a href="#被称为操作符" class="headerlink" title="被称为操作符"></a>被称为操作符</h4><h3 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h3><h3 id="递增和递减运算符"><a href="#递增和递减运算符" class="headerlink" title="递增和递减运算符"></a>递增和递减运算符</h3><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h3>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E5%89%8D%E7%AB%AF/">前端</category>
      
      
      
      <comments>http://example.com/2021/06/11/JavaScript/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>java字符串</title>
      <link>http://example.com/2021/06/10/java%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <guid>http://example.com/2021/06/10/java%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <pubDate>Thu, 10 Jun 2021 12:59:36 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;字符串&quot;&gt;&lt;a href=&quot;#字符串&quot; class=&quot;headerlink&quot; title=&quot;字符串&quot;&gt;&lt;/a&gt;字符串&lt;/h1&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><span id="more"></span><h2 id="声明字符串变量必须经过初始化才可以使用，否则编译器会报出“变量未被初始化错误”"><a href="#声明字符串变量必须经过初始化才可以使用，否则编译器会报出“变量未被初始化错误”" class="headerlink" title="声明字符串变量必须经过初始化才可以使用，否则编译器会报出“变量未被初始化错误”"></a>声明字符串变量必须经过初始化才可以使用，否则编译器会报出“变量未被初始化错误”</h2><h3 id="String-char-a-用一个字符数组a创建string对象。"><a href="#String-char-a-用一个字符数组a创建string对象。" class="headerlink" title="String(char a[]//用一个字符数组a创建string对象。"></a><code>String(char a[]</code>//用一个字符数组a创建string对象。</h3><h3 id="String-char-a-int-offset-int-length-提取字符数组中的一部分创建一个字符串对象，开始位置和长度"><a href="#String-char-a-int-offset-int-length-提取字符数组中的一部分创建一个字符串对象，开始位置和长度" class="headerlink" title="String(char a[],int offset,int length)//提取字符数组中的一部分创建一个字符串对象，开始位置和长度"></a><code>String(char a[],int offset,int length)</code>//提取字符数组中的一部分创建一个字符串对象，开始位置和长度</h3><h3 id="String-char-value-该构造方法可以分配一个新的string对象，使其表示字符数组参数中所有元素连接的结果"><a href="#String-char-value-该构造方法可以分配一个新的string对象，使其表示字符数组参数中所有元素连接的结果" class="headerlink" title="String(char[] value)//该构造方法可以分配一个新的string对象，使其表示字符数组参数中所有元素连接的结果"></a><code>String(char[] value)</code>//该构造方法可以分配一个新的string对象，使其表示字符数组参数中所有元素连接的结果</h3><hr><hr><h2 id="对字符串进行操作"><a href="#对字符串进行操作" class="headerlink" title="对字符串进行操作"></a>对字符串进行操作</h2><h3 id="long-starTime-System-currentTimeMillis-定义对字符串执行操作的起始时间"><a href="#long-starTime-System-currentTimeMillis-定义对字符串执行操作的起始时间" class="headerlink" title="long starTime = System.currentTimeMillis(); //定义对字符串执行操作的起始时间"></a><code>long starTime = System.currentTimeMillis();</code> //定义对字符串执行操作的起始时间</h3><h3 id="long-endTime-System-currentTimeMillis-定义对字符串操作后的时间"><a href="#long-endTime-System-currentTimeMillis-定义对字符串操作后的时间" class="headerlink" title="long endTime = System.currentTimeMillis();//定义对字符串操作后的时间"></a><code>long endTime = System.currentTimeMillis();</code>//定义对字符串操作后的时间</h3><h3 id="StringBuilder-builder-new-StringBuilder-quot-quot-创建字符串生成器"><a href="#StringBuilder-builder-new-StringBuilder-quot-quot-创建字符串生成器" class="headerlink" title="StringBuilder builder = new StringBuilder(&quot;&quot;);//创建字符串生成器"></a><code>StringBuilder builder = new StringBuilder(&quot;&quot;);</code>//创建字符串生成器</h3><h3 id="append-content-该方法用于向字符串生成器中追加内容，通过该方法的多个重载形式，可实现接受任何类型的数据，如int-boolean-char-String-double或者另一个字符串生成器等"><a href="#append-content-该方法用于向字符串生成器中追加内容，通过该方法的多个重载形式，可实现接受任何类型的数据，如int-boolean-char-String-double或者另一个字符串生成器等" class="headerlink" title="append(content)//该方法用于向字符串生成器中追加内容，通过该方法的多个重载形式，可实现接受任何类型的数据，如int boolean char String double或者另一个字符串生成器等"></a><code>append(content)</code>//该方法用于向字符串生成器中追加内容，通过该方法的多个重载形式，可实现接受任何类型的数据，如<code>int boolean char String double</code>或者另一个字符串生成器等</h3><h4 id="content表示要追加到字符串生成器中的内容，可以是任何类型的数据或者其他对象"><a href="#content表示要追加到字符串生成器中的内容，可以是任何类型的数据或者其他对象" class="headerlink" title="content表示要追加到字符串生成器中的内容，可以是任何类型的数据或者其他对象"></a>content表示要追加到字符串生成器中的内容，可以是任何类型的数据或者其他对象</h4><h3 id="insert-int-offset-arg-该方法用于向字符串生成器中的指定位置插入数据内容。通过该方法的不同重载形式，可实现向字符串生成器中插入int-float-char-boolean等基本数据类型或其他对象"><a href="#insert-int-offset-arg-该方法用于向字符串生成器中的指定位置插入数据内容。通过该方法的不同重载形式，可实现向字符串生成器中插入int-float-char-boolean等基本数据类型或其他对象" class="headerlink" title="insert(int offset,arg)//该方法用于向字符串生成器中的指定位置插入数据内容。通过该方法的不同重载形式，可实现向字符串生成器中插入int float char boolean等基本数据类型或其他对象"></a><code>insert(int offset,arg)</code>//该方法用于向字符串生成器中的指定位置插入数据内容。通过该方法的不同重载形式，可实现向字符串生成器中插入<code>int float char boolean</code>等基本数据类型或其他对象</h3><h4 id="offset：字符串生成器的位置，该参数必须大于等于0，且小于等于此序列的长度-arg：将插入至字符串生成器的位置"><a href="#offset：字符串生成器的位置，该参数必须大于等于0，且小于等于此序列的长度-arg：将插入至字符串生成器的位置" class="headerlink" title="offset：字符串生成器的位置，该参数必须大于等于0，且小于等于此序列的长度;arg：将插入至字符串生成器的位置."></a>offset：字符串生成器的位置，该参数必须大于等于0，且小于等于此序列的长度;arg：将插入至字符串生成器的位置.</h4><h3 id="delete-nt-start-int-end-移除此序列的子字符串中的字符。该子字符串从指定的start处开始，一直到索引end-1处的字符，如果不存在这种字符，则一直到序列尾部。如果start等于end，则不发生任何改变"><a href="#delete-nt-start-int-end-移除此序列的子字符串中的字符。该子字符串从指定的start处开始，一直到索引end-1处的字符，如果不存在这种字符，则一直到序列尾部。如果start等于end，则不发生任何改变" class="headerlink" title="delete(nt start,int end)//移除此序列的子字符串中的字符。该子字符串从指定的start处开始，一直到索引end-1处的字符，如果不存在这种字符，则一直到序列尾部。如果start等于end，则不发生任何改变"></a><code>delete(nt start,int end)</code>//移除此序列的子字符串中的字符。该子字符串从指定的start处开始，一直到索引end-1处的字符，如果不存在这种字符，则一直到序列尾部。如果start等于end，则不发生任何改变</h3><hr><hr><h2 id="使用正则表达式"><a href="#使用正则表达式" class="headerlink" title="使用正则表达式"></a>使用正则表达式</h2><p><img src="D:\Blog\source\images\QQ截图20210611213606.png" alt="QQ截图20210611213606"></p><h3 id="在正则表达式中“-”代表任何一个字符，因此在正则表达式中如果想使用普通意义的点字符“-”-必须使用转义字符“-”"><a href="#在正则表达式中“-”代表任何一个字符，因此在正则表达式中如果想使用普通意义的点字符“-”-必须使用转义字符“-”" class="headerlink" title="在正则表达式中“.”代表任何一个字符，因此在正则表达式中如果想使用普通意义的点字符“.”,必须使用转义字符“\”"></a>在正则表达式中“.”代表任何一个字符，因此在正则表达式中如果想使用普通意义的点字符“.”,必须使用转义字符“\”</h3><h3 id="String-fristArray-str-split-quot-quot-按照“-”进行分割，使用转义字符”-”"><a href="#String-fristArray-str-split-quot-quot-按照“-”进行分割，使用转义字符”-”" class="headerlink" title="String[] fristArray = str.split(&quot;\\.&quot;);//按照“.”进行分割，使用转义字符”\.”"></a><code>String[] fristArray = str.split(&quot;\\.&quot;);</code>//按照“.”进行分割，使用转义字符”\.”</h3><h3 id="String-secondArray-str-split-quot-quot-2-按照”-”进行两次分割，使用转义字符”-‘"><a href="#String-secondArray-str-split-quot-quot-2-按照”-”进行两次分割，使用转义字符”-‘" class="headerlink" title="*String****[] secondArray = str.split(&quot;\\\\.&quot;,2);//按照”.”进行两次分割，使用转义字符”\.‘"></a><code>*String****[] secondArray = str.split(&quot;\\\\.&quot;,2);</code>//按照”.”进行两次分割，使用转义字符”\.‘</h3><p><img src="D:\Blog\source\images\QQ截图20210611214016.png" alt="QQ截图20210611214016"></p><hr><hr><h2 id="字符串的方法"><a href="#字符串的方法" class="headerlink" title="字符串的方法"></a>字符串的方法</h2><h3 id="int-size-str-length-获取字符串的长度"><a href="#int-size-str-length-获取字符串的长度" class="headerlink" title="int size = str.length();//获取字符串的长度"></a><code>int size = str.length();</code>//获取字符串的长度</h3><h3 id="int-size1-str-indexOf-quot-a-quot-该方法用于返回参数字符串s在指定字符串中首次出现的索引位置。没有则是-1"><a href="#int-size1-str-indexOf-quot-a-quot-该方法用于返回参数字符串s在指定字符串中首次出现的索引位置。没有则是-1" class="headerlink" title="int size1 = str.indexOf(&quot;a&quot;);//该方法用于返回参数字符串s在指定字符串中首次出现的索引位置。没有则是-1."></a><code>int size1 = str.indexOf(&quot;a&quot;);</code>//该方法用于返回参数字符串s在指定字符串中首次出现的索引位置。没有则是-1.</h3><h3 id="int-size2-str-lastIndexOf-quot-a-quot-如果为空，则获取的是长度。"><a href="#int-size2-str-lastIndexOf-quot-a-quot-如果为空，则获取的是长度。" class="headerlink" title="int size2 = str.lastIndexOf(&quot;a&quot;);//如果为空，则获取的是长度。"></a><code>int size2 = str.lastIndexOf(&quot;a&quot;);</code>//如果为空，则获取的是长度。</h3><h3 id="char-mychar-str-charAt-5-将该指定索引处的字符返回。"><a href="#char-mychar-str-charAt-5-将该指定索引处的字符返回。" class="headerlink" title="char mychar = str.charAt(5);//将该指定索引处的字符返回。"></a><code>char mychar = str.charAt(5);</code>//将该指定索引处的字符返回。</h3><h3 id="String-substr-str-substring-3-该方法返回的是从指定的索引位置开始截取直到该字符串结尾的子串。在字符串中空格占一个索引位置。"><a href="#String-substr-str-substring-3-该方法返回的是从指定的索引位置开始截取直到该字符串结尾的子串。在字符串中空格占一个索引位置。" class="headerlink" title="String substr = str.substring(3);//该方法返回的是从指定的索引位置开始截取直到该字符串结尾的子串。在字符串中空格占一个索引位置。"></a><code>String substr = str.substring(3);</code>//该方法返回的是从指定的索引位置开始截取直到该字符串结尾的子串。在字符串中空格占一个索引位置。</h3><h3 id="String-substr1-str-substring-0-3-该方法返回的是从字符串某一索引位置开始截取至某一索引位置结束的子串。"><a href="#String-substr1-str-substring-0-3-该方法返回的是从字符串某一索引位置开始截取至某一索引位置结束的子串。" class="headerlink" title="String substr1 = str.substring(0,3);//该方法返回的是从字符串某一索引位置开始截取至某一索引位置结束的子串。"></a><code>String substr1 = str.substring(0,3);</code>//该方法返回的是从字符串某一索引位置开始截取至某一索引位置结束的子串。</h3><h3 id="str-trim-该方法返回字符串的副本，忽略前导空格和尾部空格。"><a href="#str-trim-该方法返回字符串的副本，忽略前导空格和尾部空格。" class="headerlink" title="str.trim();//该方法返回字符串的副本，忽略前导空格和尾部空格。"></a><code>str.trim();</code>//该方法返回字符串的副本，忽略前导空格和尾部空格。</h3><h3 id="String-newstr-str-replace-quot-e-quot-quot-E-quot-该方法可实现将指定的字符或字符串替换成新的字符或者字符串。如果要替换的字符oldChar在字符串中重复出现多次，replace-方法会将所有oldChar全部替换成newChar-需要注意的是，要替换的字符oldChar的大小写要与元字符串中的字符的大小写保持一致，否则不能成功的替换。"><a href="#String-newstr-str-replace-quot-e-quot-quot-E-quot-该方法可实现将指定的字符或字符串替换成新的字符或者字符串。如果要替换的字符oldChar在字符串中重复出现多次，replace-方法会将所有oldChar全部替换成newChar-需要注意的是，要替换的字符oldChar的大小写要与元字符串中的字符的大小写保持一致，否则不能成功的替换。" class="headerlink" title="String newstr = str.replace(&quot;e&quot;,&quot;E&quot;);//该方法可实现将指定的字符或字符串替换成新的字符或者字符串。如果要替换的字符oldChar在字符串中重复出现多次，replace()方法会将所有oldChar全部替换成newChar.需要注意的是，要替换的字符oldChar的大小写要与元字符串中的字符的大小写保持一致，否则不能成功的替换。"></a><code>String newstr = str.replace(&quot;e&quot;,&quot;E&quot;);</code>//该方法可实现将指定的字符或字符串替换成新的字符或者字符串。如果要替换的字符oldChar在字符串中重复出现多次，replace()方法会将所有oldChar全部替换成newChar.需要注意的是，要替换的字符oldChar的大小写要与元字符串中的字符的大小写保持一致，否则不能成功的替换。</h3><h3 id="boolean-b-num1-startsWith-quot-22-quot"><a href="#boolean-b-num1-startsWith-quot-22-quot" class="headerlink" title="boolean b = num1.startsWith(&quot;22&quot;);"></a><code>boolean b = num1.startsWith(&quot;22&quot;);</code></h3><h3 id="boolean-b1-num1-endsWith-quot-12-quot-这两个方法分别用于判断该字符串是否以指定的内容开始或者结束。这两个方法的返回值都为boolean类型。"><a href="#boolean-b1-num1-endsWith-quot-12-quot-这两个方法分别用于判断该字符串是否以指定的内容开始或者结束。这两个方法的返回值都为boolean类型。" class="headerlink" title="boolean b1 = num1.endsWith(&quot;12&quot;);//这两个方法分别用于判断该字符串是否以指定的内容开始或者结束。这两个方法的返回值都为boolean类型。"></a><code>boolean b1 = num1.endsWith(&quot;12&quot;);</code>//这两个方法分别用于判断该字符串是否以指定的内容开始或者结束。这两个方法的返回值都为boolean类型。</h3><h3 id="boolean-c-s1-equals-s2-如果两个字符串具有相同的字符和长度，则使用equals（）方法进行比较时，返回true。"><a href="#boolean-c-s1-equals-s2-如果两个字符串具有相同的字符和长度，则使用equals（）方法进行比较时，返回true。" class="headerlink" title="boolean c = s1.equals(s2);//如果两个字符串具有相同的字符和长度，则使用equals（）方法进行比较时，返回true。"></a><code>boolean c = s1.equals(s2);</code>//如果两个字符串具有相同的字符和长度，则使用equals（）方法进行比较时，返回true。</h3><h3 id="boolean-d-s1-equalsIgnoreCase-s2-使用equals方法对字符串进行比较时是区分大小写的，而使用equalsIgnoreCase方法是在忽略了大小写的情况下比较两个字符串是否相等，返回结果仍为Boolean类型"><a href="#boolean-d-s1-equalsIgnoreCase-s2-使用equals方法对字符串进行比较时是区分大小写的，而使用equalsIgnoreCase方法是在忽略了大小写的情况下比较两个字符串是否相等，返回结果仍为Boolean类型" class="headerlink" title="boolean d = s1.equalsIgnoreCase(s2);//使用equals方法对字符串进行比较时是区分大小写的，而使用equalsIgnoreCase方法是在忽略了大小写的情况下比较两个字符串是否相等，返回结果仍为Boolean类型"></a><code>boolean d = s1.equalsIgnoreCase(s2);</code>//使用equals方法对字符串进行比较时是区分大小写的，而使用equalsIgnoreCase方法是在忽略了大小写的情况下比较两个字符串是否相等，返回结果仍为Boolean类型</h3><h3 id="s1-compareTo-s2-将s1与s2比较的结果输出。该方法为按字典顺序比较两个字符串，该比较基于字符串中哥哥字符串中各个字符的Unicode值，按字典顺序将此String对象表示的字符序列与参数字符串所表示的字符序列进行比较。如果按字典顺序此String对象位于参数字符串之前，则比较结果为一个负整数；如果按字典顺序此String对象位于参数字符串之后，则比较结果为一个正整数；如果这两个字符串相等，则结果为0；该方法只有在equals-Object-方法返回true时才返回0"><a href="#s1-compareTo-s2-将s1与s2比较的结果输出。该方法为按字典顺序比较两个字符串，该比较基于字符串中哥哥字符串中各个字符的Unicode值，按字典顺序将此String对象表示的字符序列与参数字符串所表示的字符序列进行比较。如果按字典顺序此String对象位于参数字符串之前，则比较结果为一个负整数；如果按字典顺序此String对象位于参数字符串之后，则比较结果为一个正整数；如果这两个字符串相等，则结果为0；该方法只有在equals-Object-方法返回true时才返回0" class="headerlink" title="s1.compareTo(s2);//将s1与s2比较的结果输出。该方法为按字典顺序比较两个字符串，该比较基于字符串中哥哥字符串中各个字符的Unicode值，按字典顺序将此String对象表示的字符序列与参数字符串所表示的字符序列进行比较。如果按字典顺序此String对象位于参数字符串之前，则比较结果为一个负整数；如果按字典顺序此String对象位于参数字符串之后，则比较结果为一个正整数；如果这两个字符串相等，则结果为0；该方法只有在equals(Object)方法返回true时才返回0."></a><code>s1.compareTo(s2);</code>//将s1与s2比较的结果输出。该方法为按字典顺序比较两个字符串，该比较基于字符串中哥哥字符串中各个字符的Unicode值，按字典顺序将此String对象表示的字符序列与参数字符串所表示的字符序列进行比较。如果按字典顺序此String对象位于参数字符串之前，则比较结果为一个负整数；如果按字典顺序此String对象位于参数字符串之后，则比较结果为一个正整数；如果这两个字符串相等，则结果为0；该方法只有在equals(Object)方法返回true时才返回0.</h3><h3 id="String-news1-s2-toLowerCase-大写变小写"><a href="#String-news1-s2-toLowerCase-大写变小写" class="headerlink" title="String news1 = s2.toLowerCase();//大写变小写"></a><code>String news1 = s2.toLowerCase();</code>//大写变小写</h3><h3 id="String-news2-s1-toUpperCase-小写变大写-使用这两种方法时进行大小写转换时，数字或非字符不受影响。"><a href="#String-news2-s1-toUpperCase-小写变大写-使用这两种方法时进行大小写转换时，数字或非字符不受影响。" class="headerlink" title="String news2 = s1.toUpperCase();//小写变大写,使用这两种方法时进行大小写转换时，数字或非字符不受影响。"></a><code>String news2 = s1.toUpperCase();</code>//小写变大写,使用这两种方法时进行大小写转换时，数字或非字符不受影响。</h3><hr><hr><h2 id="常规类型格式化"><a href="#常规类型格式化" class="headerlink" title="常规类型格式化"></a>常规类型格式化</h2><h3 id="str-format-String-format-Object-args-该方法使用指定的格式字符串和参数返回一个格式化字符串，格式化后的新字符串使用本地默认的语言环境-format：格式字符串-args-格式字符串中由格式说明符引用的参数，如果还有格式说明符以外的参数，则忽略这些额外的参数，此参数的数目是可变的，可以为0；"><a href="#str-format-String-format-Object-args-该方法使用指定的格式字符串和参数返回一个格式化字符串，格式化后的新字符串使用本地默认的语言环境-format：格式字符串-args-格式字符串中由格式说明符引用的参数，如果还有格式说明符以外的参数，则忽略这些额外的参数，此参数的数目是可变的，可以为0；" class="headerlink" title="str.format(String format,Object...args)//该方法使用指定的格式字符串和参数返回一个格式化字符串，格式化后的新字符串使用本地默认的语言环境;format：格式字符串;args:格式字符串中由格式说明符引用的参数，如果还有格式说明符以外的参数，则忽略这些额外的参数，此参数的数目是可变的，可以为0；"></a><code>str.format(String format,Object...args)</code>//该方法使用指定的格式字符串和参数返回一个格式化字符串，格式化后的新字符串使用本地默认的语言环境;format：格式字符串;args:格式字符串中由格式说明符引用的参数，如果还有格式说明符以外的参数，则忽略这些额外的参数，此参数的数目是可变的，可以为0；</h3><h3 id="format-Local-1-String-format-Object-args-格式化过程中要应用的语言环境，如果1为null-则不进行本地化。"><a href="#format-Local-1-String-format-Object-args-格式化过程中要应用的语言环境，如果1为null-则不进行本地化。" class="headerlink" title="format(Local 1,String format,Object...args)//格式化过程中要应用的语言环境，如果1为null,则不进行本地化。"></a><code>format(Local 1,String format,Object...args)</code>//格式化过程中要应用的语言环境，如果1为null,则不进行本地化。</h3><p><img src="D:\Blog\source\images\QQ截图20210611214940.png" alt="QQ截图20210611214940"></p><hr><hr><h2 id="格式化常见的日期时间组合"><a href="#格式化常见的日期时间组合" class="headerlink" title="格式化常见的日期时间组合"></a>格式化常见的日期时间组合</h2><p><img src="D:\Blog\source\images\QQ截图20210611215032.png" alt="QQ截图20210611215032"></p><hr><hr><h2 id="时间格式化"><a href="#时间格式化" class="headerlink" title="时间格式化"></a>时间格式化</h2><p><img src="D:\Blog\source\images\QQ截图20210611215114.png" alt="QQ截图20210611215114"></p><hr><hr><h2 id="日期格式化"><a href="#日期格式化" class="headerlink" title="日期格式化"></a>日期格式化</h2><p><img src="D:\Blog\source\images\QQ截图20210611215156.png" alt="QQ截图20210611215156"></p><hr><hr>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/java/">java</category>
      
      
      <category domain="http://example.com/tags/%E5%AF%BC%E8%88%AA/">导航</category>
      
      <category domain="http://example.com/tags/%E5%88%86%E4%BA%AB/">分享</category>
      
      
      <comments>http://example.com/2021/06/10/java%E5%AD%97%E7%AC%A6%E4%B8%B2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hello World</title>
      <link>http://example.com/2021/06/09/hello-world/</link>
      <guid>http://example.com/2021/06/09/hello-world/</guid>
      <pubDate>Wed, 09 Jun 2021 07:12:04 GMT</pubDate>
      
      <description>&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><span id="more"></span><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><ul><li>列表1</li><li>列表2<pre><code> a 子列表a b 子列表b</code></pre></li></ul><p>#<a href="%E5%9C%B0%E5%9D%80">导航</a></p><p>#<img src="%E5%9C%B0%E5%9D%80" alt="图片名称"></p><hr><hr><p><em>字体是斜线的哦</em><br><strong>字体是加粗的哦</strong></p><p><code>&lt;html&gt;&lt;/html&gt;</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tiitle</span>&gt;</span>我是多行代码块<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>我的内容是引用的哦</p></blockquote><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content:encoded>
      
      
      
      
      <comments>http://example.com/2021/06/09/hello-world/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
